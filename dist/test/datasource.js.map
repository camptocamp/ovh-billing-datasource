{"version":3,"sources":["../../src/datasource.js"],"names":["parseUsage","cryptoJS","require","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","ovh","appKey","jsonData","application_key","appSecret","application_secret","consumerKey","consumer_key","apiServer","apiserver","options","buildQueryParameters","then","query","targets","filter","t","hide","from","range","clone","set","to","retrieveStats","toISOString","targets_promises","forEach","targetValue","targetIndex","targetArray","params","promise","callApi","projectID","results","datapoints_promises","response","data","value","index","array","getUsageFromID","id","totalPrice","Date","parse","push","getUsageForCurrentMonth","Promise","all","datapoints","raw","flat","sort","a","b","projectName","usageID","total","hourlyUsage","monthlyUsage","period","description","datasourceRequest","method","catch","e","endpoint","body","getTimestamp","signature","SHA1","timestamp","headers","status","message","title","statusText","_","target","undefined","map","refId","promises","getProjectName","names","legendFormat","i","instance","snapshot","storage","volume"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nlet cryptoJS = require('./crypto-js/index');\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    this.ovh = {\n      appKey: instanceSettings.jsonData.application_key,\n      appSecret: instanceSettings.jsonData.application_secret,\n      consumerKey: instanceSettings.jsonData.consumer_key,\n      apiServer: instanceSettings.jsonData.apiserver || \"https://eu.api.ovh.com/1.0\",\n    };\n\n  }\n\n  query(options) {\n    return this.buildQueryParameters(options).then(query => {\n      query.targets = query.targets.filter(t => !t.hide);\n      let from = options.range.from.clone();\n      from.set('date', 1);\n      from.set('hour', 0);\n      from.set('minute', 0);\n      let to = options.range.to.clone();\n      return this.retrieveStats(query.targets, from.toISOString(), to.toISOString());\n    });\n  }\n\n  retrieveStats(targets, from, to) {\n    var targets_promises = [];\n\n    targets.forEach((targetValue, targetIndex, targetArray) => {\n      let params = \"from=\"+from+\"&to=\"+to;\n      const promise = this.callApi(\"/cloud/project/\" + targetValue.projectID + \"/usage/history?\" + params, \"GET\")\n        .then(response => {\n          let results = {\n            \"data\": []\n          };\n\n          var datapoints_promises = [];\n          response.data.forEach((value, index, array) => {\n            const promise = this.getUsageFromID(targetValue.projectID, value.id).then(value => {\n              return [\n                [ value.totalPrice, Date.parse(value.from) ],\n                [ value.totalPrice, Date.parse(value.to)],\n              ];\n            });\n            datapoints_promises.push(promise);\n          });\n\n          const promise = this.getUsageForCurrentMonth(targetValue.projectID).then(value => {\n            return [\n                [ value.totalPrice, Date.parse(value.from) ],\n                [ value.totalPrice, Date.parse(value.to)],\n              ];\n          });\n          datapoints_promises.push(promise);\n\n          return Promise.all(datapoints_promises).then(raw => {\n            let datapoints = raw.flat();\n            datapoints.sort(function(a, b) {\n              return a[1] - b[1];\n            });\n            return { \"target\": targetValue.projectName, \"datapoints\": datapoints};\n          });\n        });\n      targets_promises.push(promise);\n    });\n\n    return Promise.all(targets_promises).then(targets => {\n      return {\n        \"data\": targets,\n      };\n    });\n  }\n\n  getUsageFromID(projectID, usageID) {\n    return this.callApi(\"/cloud/project/\" + projectID + \"/usage/history/\" + usageID, \"GET\")\n    .then(response => {\n      let total = 0;\n      total += parseUsage(response.data.hourlyUsage);\n      total += parseUsage(response.data.monthlyUsage);\n      return {\n        \"totalPrice\": total,\n        \"from\": response.data.period.from,\n        \"to\": response.data.period.to,\n      };\n    })\n  }\n\n  getUsageForCurrentMonth(projectID) {\n    return this.callApi(\"/cloud/project/\" + projectID + \"/usage/current\", \"GET\")\n    .then(response => {\n      let total = 0;\n      total += parseUsage(response.data.hourlyUsage);\n      total += parseUsage(response.data.monthlyUsage);\n      return {\n        \"totalPrice\": total,\n        \"from\": response.data.period.from,\n        \"to\": response.data.period.to,\n      };\n    })\n  }\n\n  getProjectName(projectID) {\n    return this.callApi(\"/cloud/project/\" + projectID, \"GET\")\n    .then(response => {\n      return response.data.description;\n    });\n  }\n\n  getTimestamp() {\n    return this.backendSrv.datasourceRequest({\n      url: this.ovh.apiServer + \"/auth/time\",\n      method: 'GET',\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(e => {\n      throw e;\n    });\n  }\n\n  callApi(endpoint, method, body = \"\") {\n    \n    return this.getTimestamp().then(timestamp => {\n      let url = this.ovh.apiServer + endpoint;\n      let signature = \"$1$\" + cryptoJS.SHA1(this.ovh.appSecret + \"+\" + this.ovh.consumerKey + \"+\" + method + \"+\" + url + \"+\" + body + \"+\" + timestamp);\n\n      return this.backendSrv.datasourceRequest({\n        url: url,\n        method: method,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Ovh-Application': this.ovh.appKey,\n          'X-Ovh-Timestamp': timestamp,\n          'X-Ovh-Signature': signature,\n          'X-Ovh-Consumer': this.ovh.consumerKey,\n        },\n      })\n      .then(response => {\n        return response;\n      });\n    });\n\n  }\n\n  testDatasource() {\n    return this.callApi(\"/cloud/project\", \"GET\")\n      .then(response => {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      })\n      .catch(e => {\n        return { status: \"error\", message: e.status + \" \" + e.statusText + \" - \" + e.data.message, title: \"Error\" };\n      });\n  }\n\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== undefined;\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: target.target,\n        refId: target.refId,\n        hide: target.hide,\n        type: target.type || 'timeserie',\n        projectID: target.target,\n        projectName: target.target,\n      };\n    });\n\n    var promises = [];\n    targets.forEach((value, index, array) => {\n      const promise = this.getProjectName(value.projectID).then(name => {\n        return name;\n      });\n      promises.push(promise);\n    });\n\n    return Promise.all(promises).then(names => {\n      names.forEach((value, index, array) => {\n        targets[index].projectName = value;\n        targets[index].legendFormat = value;\n      });\n      options.targets = targets; \n      return options;\n    });\n  }\n}\n\nexport function parseUsage(data) {\n  let total = 0;\n  \n  // Instance\n  for(var i in data.instance) {\n    total += data.instance[i].totalPrice;\n  }\n\n  // Snapshot\n  for(var i in data.snapshot) {\n    total += data.snapshot[i].totalPrice;\n  }\n\n  // Storage\n  for(var i in data.storage) {\n    total += data.storage[i].totalPrice;\n  }\n\n  // Volume\n  for(var i in data.volume) {\n    total += data.volume[i].totalPrice;\n  }\n\n  return total;\n}\n"]}